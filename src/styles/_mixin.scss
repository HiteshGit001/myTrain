@mixin font ($font-family, $font-size, $line-height, $font-weight, $color) {
  font-family: $font-family;
  font-size: $font-size;
  line-height: $line-height;
  font-weight: $font-weight;
  color: $color;
}

@mixin btn ($width, $padding, $bgColor, $border, $borderRadius) {
  width: $width;
  padding: $padding;
  background: $bgColor;
  border: $border;
  border-radius: $borderRadius;
}

@mixin flex ($direction, $justify, $align, $wrap: none, $gap: normal) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
  gap: $gap;
}

@mixin container($width, $maxWidth, $margin: 0, $padding: 0, $bgColor, $borderRadius, $boxShadow: none, $backdropFilter: none) {
  width: $width;
  max-width: $maxWidth;
  margin: $margin;
  padding: $padding;
  background: $bgColor;
  border-radius: $borderRadius;
  box-shadow: $boxShadow;
  backdrop-filter: $backdropFilter;
}

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {

  @each $fs-breakpoint,
  $fs-font-size in $fs-map {
    @if $fs-breakpoint ==null {
      font-size: $fs-font-size;
    }

    @else {

      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }

      @media screen and (min-width: $fs-breakpoint) {
        font-size: $fs-font-size;
      }
    }
  }
}